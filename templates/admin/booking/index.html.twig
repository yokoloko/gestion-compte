{% extends 'layout.html.twig' %}

{% block title %}Créneaux ADMIN - {{ site_name }}{% endblock %}

{% block breadcrumps %}
    <a href="{{ path('homepage') }}"><i class="material-icons">home</i></a> <i class="material-icons">chevron_right</i>
    <i class="material-icons">date_range</i><span>Créneaux ADMIN</span>
{% endblock %}

{% block content %}

        <div class="row center">
            <h4 class="header">Admin créneaux</h4>
        </div>
        <div class="row">
            {#<ul class="collapsible" data-collapsible="accordion">#}
                {#<li>#}
                    {#<div class="collapsible-header"><i class="material-icons">help_outline</i>Outils</div>#}
                    {#<div class="collapsible-body">#}
                        {#<ul>#}
                            {#<li>#}
                            {#</li>#}
                        {#</ul>#}
                    {#</div>#}
                {#</li>#}
            {#</ul>#}
        </div>


    <ul class="collapsible" data-collapsible="accordion">
        <li>
            <div class="collapsible-header"><i class="material-icons">tune</i>Filtres</div>
            <div class="collapsible-body">
                {{ form_start(form) }}

                <div class="row">
                    <div class="input-field col m3">
                        {{ form_widget(form.from) }}
                        {{ form_label(form.from) }}
                    </div>
                    <div class="input-field col m3">
                        {{ form_widget(form.to) }}
                        {{ form_label(form.to) }}
                    </div>
                </div>
                {{ form_widget(form.filter) }}
                {{ form_widget(form.booker) }}
                {{ form_end(form) }}
            </div>
        </li>
    </ul>


        <div class="row">
            <div class="col m2 hide-on-small-only">
            </div>
            <div class="col s12 m10">
                <div style="display: flex;">
                    {% for i in hours %}
                        {#<span style="float: left; width: {{ 100 / (hours|length) }}%">#}
                        <div style="flex: 1">
                            <div style="text-align: center;width: 100%;margin-left: -50%;">
                                {{ i }}h
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
        {% for bucketsByjob in bucketsByDay %}
            {% set date = false %}
            {% for buckets in bucketsByjob %}
                <div class="row center show-on-small hide-on-med-and-up ">
                    {% if not date %}{{ (buckets|first).start|date_fr_long }}{% endif %}
                </div>
                <div class="row" style="display: flex;min-height: 60px;">
                    <div class="col m2 hide-on-small-only valign-wrapper">
                        <div>
                            {% if not date %}<b>{{ (buckets|first).start|date_fr_long }}</b><br>{% set date = true %}{% endif %}
                        </div>
                    </div>
                    <div class="col m10 s12">
                        <div style="position: relative">
                            {% set lignes = {} %}
                            {% for bucket in buckets %}
                                {#compute lines #}
                                {% set l = 0 %}
                                {% set break = false %}
                                {% for i in 0..100 if not break %}
                                    {% if lignes[i~'_'] is not defined %}
                                        {% set l = i %}
                                        {% set lignes = lignes|merge({(i~'_'): bucket.end}) %}
                                        {% set break = true %}
                                    {% else %}
                                        {% if lignes[i~'_'] < bucket.start  %}
                                            {% set l = i %}
                                            {% set lignes = lignes|merge({(i~'_'): bucket.end}) %}
                                            {% set break = true %}
                                        {% endif %}
                                    {% endif %}
                                {% endfor %}
                                {# / compute lines #}
                                {% include "admin/booking/_partial/shift.html.twig" with { bucket: bucket, start: hours|first, end: hours|last, line:l  } %}
                            {% endfor %}
                        </div>
                    </div>
                </div>
            {% endfor %}
        {% endfor %}

    {{ form_start(delete_bucket_form,{ 'attr' : { 'id' : 'delete_bucket'}}) }}
    {{ form_widget(delete_bucket_form) }}
    {{ form_end(delete_bucket_form) }}

{% endblock %}

{% block stylesheets %}
{% endblock %}
{% block javascripts %}
    <script>
        jQuery(function ($) {
            $('input.empty-shift').autocomplete({
                data: {
                    {% for beneficiary in beneficiaries %}
                        "{{ beneficiary.autocompleteLabel }}" : null,
                    {% endfor %}
                },
                limit: 10, // The max amount of results that can be shown at once. Default: Infinity.
                onAutocomplete: function(val) {
                    // Callback function when value is autcompleted.
                    $('button.add').removeAttr('disabled');
                },
                minLength: 2, // The minimum length of the input for the autocomplete to start. Default: 1.
            });
            $('input.empty-shift').keydown(function () {
                $('button.add:not(:disabled)').attr('disabled','disabled');
            });
        })

        function postShift(shiftId) {

            {% if use_fly_and_fixed %}
            let selectedTypeService = document.querySelector('.checkedTypeService'+shiftId+':checked');
            {% else %}
            let selectedTypeService = document.querySelector('input[name="typeService'+shiftId+'"]');
            {% endif %}
            let selectedBenef = document.getElementById('benef'+shiftId);

            if (selectedTypeService != null && selectedBenef != null) {
                let url = "{{ path('admin_shift_book',{'id': 'tmpId'}) }}";
                url = url.replace("tmpId", shiftId);

                let body = {
                    "typeService": selectedTypeService.value,
                    "beneficiary": selectedBenef.value
                };

                // If using old IE version
                var xhttp = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");

                xhttp.open("POST", url, true);
                xhttp.onreadystatechange = function () {
                    if (xhttp.readyState > 3) {
                        if (200 <= xhttp.status && xhttp.status < 300) {
                            window.location.replace(xhttp.responseText);
                        } else {
                            alert("une erreur est survenue");
                        }
                    }
                };
                xhttp.send(JSON.stringify(body));
                return xhttp;
            }
        }
    </script>
{% endblock %}
